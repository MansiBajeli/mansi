#include <iostream>
using namespace std;

class A {
public:
    void func(int &val) {
        val *= 2;
    }
};

class B {
public:
    void func(int &val) {
        val *= 3;
    }
};
class C {
public:
    void func(int &val) {
        val *= 5;
    }
};
class D {
private:
    int val;
    int countA, countB, countC;

public:
    D() : val(1), countA(0), countB(0), countC(0) {} 

    void update_val(int new_val) {
        A a;
        B b;
        C c;

        while (new_val % 2 == 0) {
            a.func(val);    
            new_val /= 2;    
            countA++;         
        }

        while (new_val % 3 == 0) {
            b.func(val);       
            new_val /= 3;    
            countB++;         
        }

        while (new_val % 5 == 0) {
            c.func(val);     
            new_val /= 5;      
            countC++;        
        }
    }

    void print_counts() const {
        cout << "A's func called " << countA << " times" << endl;
        cout << "B's func called " << countB << " times" << endl;
        cout << "C's func called " << countC << " times" << endl;
    }
};

int main() {
    D d1;
    int new_val = 30;
    d1.update_val(new_val);  
    d1.print_counts();       
    return 0;
}
